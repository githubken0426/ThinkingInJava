#log4j启动时，默认会寻找source folder下的log4j.xml配置文件，若没有，会寻找log4j.properties文件。
#然后加载配置。配置文件放置位置正确，不用在程序中手动加载log4j配置文件。如果将配置文件放到了config文件夹下，在build Path中设置下就好了

#Log4j有三个主要的组件：
#Loggers(记录器--日志类别)，Appenders (输出源--日志要输出的地方)和Layouts(布局--日志以何种形式输出)。
#level ：设定日志记录的最低级别，可设的值有OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL或者自定义的级别，
#Log4j建议只使用中间四个级别,DEBUG < INFO < WARN < ERROR < FATAL

#log4j.rootLogger=level,appenderName1,appenderName2...
#(共包含5项:cosoleAppender,dailyRollingAppender,rollingAppender,fileAppender,writerAppender)
log4j.rootLogger=DEBUG,consoleAppenderName,dailyRollingFileAppenderName,fileAppenderName

#表示Logger不会在父Logger的appender里输出，默认为true
log4j.addivity.org.apache=true 



#******************第二部分:Appenders(输出源)**************************
#1：ConsoleAppender(控制台)选项：
log4j.appender.consoleAppenderName=org.apache.log4j.ConsoleAppender
	#指定日志信息的最低输出级别，默认为DEBUG
log4j.appender.consoleAppenderName.Threshold=debug
	#所有消息都会被立即输出，设为false则不输出，默认值是true
log4j.appender.consoleAppenderName.ImmediateFlush=true
log4j.appender.consoleAppenderName.Target=System.out
log4j.appender.consoleAppenderName.layout=org.apache.log4j.PatternLayout
log4j.appender.consoleAppenderName.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p (%F:%L) - %m%n
 
#2：DailyRollingFileAppender(每天产生一个日志文件)项:
log4j.appender.dailyRollingFileAppenderName=org.apache.log4j.DailyRollingFileAppender
	#指定日志信息的最低输出级别，默认为DEBUG
log4j.appender.dailyRollingFileAppenderName.Threshold=debug
	#所有消息都会被立即输出，设为false则不输出，默认值是true
log4j.appender.dailyRollingFileAppenderName.ImmediateFlush=true
	#将消息输出到dl_ga_los_portal.log中
log4j.appender.dailyRollingFileAppenderName.File=${catalina.base}/logs/thinkingInJava.log
	#true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是true
log4j.appender.dailyRollingFileAppenderName.Appender=true
	#每天产生一个新的日志文件。当前月的日志文件名为dl_ga_los_portal.log，
	#前天的日志文件名为dl_ga_los_portal_yyyy-MM-dd.log	
log4j.appender.dailyRollingFileAppenderName.DatePattern='_'yyyy-MM-dd'.log'
log4j.appender.dailyRollingFileAppenderName.layout=org.apache.log4j.PatternLayout
log4j.appender.dailyRollingFileAppenderName.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p (%F:%L) - %m%n

#3：FileAppender(文件)项：
log4j.appender.fileAppenderName=org.apache.log4j.FileAppender\t
log4j.appender.fileAppenderName.Threshold=debug
log4j.appender.fileAppenderName.ImmediateFlush=true
log4j.appender.fileAppenderName.File=${catalina.base}/logs/dl_ga_los_portal.log
log4j.appender.fileAppenderName.Appender=true
log4j.appender.fileAppenderName.DatePattern='_'yyyy-MM-dd'.log'
log4j.appender.fileAppenderName.layout=org.apache.log4j.PatternLayout
log4j.appender.fileAppenderName.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p (%F:%L) - %m%n
#4：RollingFileAppender(文件大小到达指定尺寸时候产生一个新的文件)
#5：WriterAppender(将日志以流格式发送到任意指定的地方)



#**************************第三部分:Layouts(布局)日志输出格式**************************
#(1)HTMLLayout(以HTML形式布局)
#LocationInfo=true：输出java文件名称和行号，默认值是false。
#Title=My Logging：默认值是Log4J Log Messages。

#(2)PatternLayout(灵活指定布局模式)
#ConversionPattern=%m%n：设定以怎样的格式显示消息。
#(3)SimpleLayout(包含日志信息的级别和信息字符串)
#(4)TTCCLayout(包含日志产生时间、线程、类别等信息)

log4j.logger.org.logicalcobwebs=warn
log4j.logger.org.springframework=warn
log4j.logger.org.apache.cxf=warn
log4j.logger.org.mybatis.spring=warn
log4j.logger.org.apache.ibatis=warn
log4j.logger.com.opensymphony.xwork2=warn
log4j.logger.org.apache.struts2=warn

log4j.logger.com.mybatis=DEBUG
log4j.logger.com.mybatis.common.jdbc.SimpleDataSource=DEBUG
log4j.logger.com.mybatis.common.jdbc.ScriptRunner=DEBUG
log4j.logger.com.mybatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
log4j.logger.java.sql.ResultSet = DEBUG 

            